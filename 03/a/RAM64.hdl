// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[3..5],
              a = ram0SEL, b = ram1SEL, c = ram2SEL, d = ram3SEL, 
              e = ram4SEL, f = ram5SEL, g = ram6SEL, h = ram7SEL);

    RAM8(in = in, load = ram0SEL, address = address[0..2], out = ram0OUT);
    RAM8(in = in, load = ram1SEL, address = address[0..2], out = ram1OUT);
    RAM8(in = in, load = ram2SEL, address = address[0..2], out = ram2OUT);
    RAM8(in = in, load = ram3SEL, address = address[0..2], out = ram3OUT);
    RAM8(in = in, load = ram4SEL, address = address[0..2], out = ram4OUT);
    RAM8(in = in, load = ram5SEL, address = address[0..2], out = ram5OUT);
    RAM8(in = in, load = ram6SEL, address = address[0..2], out = ram6OUT);
    RAM8(in = in, load = ram7SEL, address = address[0..2], out = ram7OUT);

    Mux8Way16(a = ram0OUT, b = ram1OUT, c = ram2OUT, d = ram3OUT,
              e = ram4OUT, f = ram5OUT, g = ram6OUT, h = ram7OUT, 
              sel = address[3..5], out = out);
}
